/****************************************************
  We are using SASS!
  DO NOT USE require, require_tree, and require_self.
  ***************************************************

  Instead require further sass files by calling the "@import" directive.
  e.g. @import "mixins";
  FYI:
  The core app automatically namespaces a plugin's css with the plugin name. I.e. it encapsulates a plugin's css in a class with the same name as plugin (e.g. a plugin with name "myplugin" gets surrounded with css class ".myplugin").
  This means that in the compiled css e.g. .test { color: #f00; } becomes .myplugin .test { color: #f00; }
  The core app also ensures that the content div surrounding the plugin views gets a css class with the name of current plugin.
  This way we ensure that your styles take effect only inside the content of your plugin and don't accidentally overwrite styles defined elsewhere (either in the core or in another plugin).

  ***************************************************
  IMPORTANT
  ---------------------------------------------------
  1) The namespacing happens automatically. There is no special action required from the plugin author. The only thing you need to pay attention to is that you write styles only for elements in the context of your plugin's views.

  2) Make sure all your scss files are partials (i.e. the file name starts with an underscore, e.g. "_application.scss"). Otherwise the base imports in the main stylesheet won't be available in your engine stylesheets!
  ***************************************************

*/

.display-flex {
  display: flex;
  align-items: center;
  justify-content: end;
}

.margin-left {
  margin-left: 1rem;
}

.progress {
  position: relative; /* required for position:absolute on children */

  .progress-bar-before-overcommit {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    background: transparent;
  }

  .progress-bar-after-overcommit {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    background: rgba(255, 255, 255, 0.5);
  }

  .progress-bar {
    &.progress-bar-empty {
      background: none;
      box-shadow: none;
      color: black;
      white-space: nowrap;
      overflow-x: visible;
    }

    &.progress-bar-disabled {
      background: repeating-linear-gradient(
        -55deg,
        transparent,
        transparent 3px,
        #dcdcdc 3px,
        #dcdcdc 5px
      );
      box-shadow: none;
      color: black;
    }

    &.has-label,
    &.has-label-if-fits,
    &.has-label-unless-fits {
      text-align: left;
      .progress-bar-label {
        padding-left: 0.5em;
      }
    }
  }

  &.label-fits .has-label-unless-fits .progress-bar-label {
    display: none;
  }
  &:not(.label-fits) .has-label-if-fits .progress-bar-label {
    display: none;
  }
}

.progress-without-margin {
  margin-bottom: 5px !important;
  margin-left: 5px;
}

.shard-name {
  font-size: x-small;
  padding-left: 15px;
  padding-right: 0px;
  white-space: nowrap;
}

.row.usage-only {
  /* group with the previous resource (probably the one that this one is "contained_in") */
  position: relative;
  top: -14px;

  .progress {
    /* 12px less than normal (20px) to compensate the displacement above */
    margin-bottom: 6px;

    /* smaller fontsizes and dimensions inside the bar */
    height: 14px;
    .progress-bar {
      line-height: 14px;
      font-size: 10px;
    }
  }
}

div.flavor-data {
  /* ensure that flavor data text appears grouped with its resource */
  margin-bottom: 1em;

  span {
    white-space: nowrap;
  }
  span:not(:last-child):after {
    content: ", ";
    white-space: normal;
  }
}

h3 > .btn.btn-edit-quota {
  margin-right: 1em;
  position: relative;
  top: -0.2em;
}

div.edit-quota-form-header {
  margin-bottom: 10px;
}

div.edit-quota-input {
  input.form-control {
    position: relative;
    top: -4px;
  }

  &.edit-quota-input-is-flashing input.form-control {
    animation-name: edit-quota-flash;
    animation-duration: 4s;
    animation-timing-function: ease-out;
  }

  @keyframes edit-quota-flash {
    0% {
      background-color: $hover-orange;
    }
    100% {
      background-color: white;
    }
  }
}

.btn.btn-sm.btn-quota-details {
  /* align with the height profile of the div.progress next to the button */
  padding: 4px 8px;
  line-height: 16px;
  position: relative;
  top: -2px;
  /* some margin for when messages are shown after the button */
  margin-right: 8px;
}

.block-on-reload {
  position: relative;

  /* a semi-transparent rectangle that blocks out the view while it's reloading */
  &:after {
    content: " ";
    display: block;
    z-index: -1000;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(255, 255, 255, 0);
    transition: background-color 0.5s;
  }
  &.is-reloading:after {
    z-index: 1000;
    background: rgba(255, 255, 255, 0.8);
  }

  /* contains an additional spinner and "Reloading..." text, centered on the
   * blocked-out view */
  .reload-message {
    display: none;
  }
  &.is-reloading .reload-message {
    display: block;
    z-index: 1001;
    position: absolute;
    top: 50%;
    margin-top: -10px;
    line-height: 20px;
    width: 100%;
    text-align: center;
  }
}

.request-explanation {
  margin-right: 2rem;
}

.alert + #package-selection {
  /* compensate for the overly large margin-bottom of .alert */
  margin-top: -10px;
}

#package-selection {
  display: flex;

  .package {
    flex: 1;
    flex-basis: 0;
    cursor: pointer;

    /* look similar to .bs-callout.bs-callout-emphasize.bs-callout-info, but
     * with different spacings and with the border at the top instead of at the
     * left */
    border: 1px solid #eee;
    border-top: 5px solid #00b3ff;
    border-radius: 3px;
    margin: 10px 0;
    padding: 10px;

    &.is-selected {
      border-color: #e2e8ea;
      border-top-color: #008fcc;
      background: #eef7fb;
    }

    &.is-unavailable {
      border-top-color: #ccc;
      color: #888;
      background: #fcfcfc;
      cursor: not-allowed;

      h3 {
        color: #aaa;
      }
    }

    &:not(:first-child) {
      margin-left: 10px;
    }

    h3 {
      margin: 0 0 14px 0;
      font-size: 18px;
      line-height: 18px;
      font-weight: bold;

      /* the default width of .fa-fw is just slightly too large, and causes the
       * heading "Object Storage" to break the line; so choose a narrower width
       */
      i.fa-fw {
        width: 16px;
      }
    }

    .muted-resources {
      font-size: 12px;

      &::before {
        display: block;
        content: "Also includes:";
        margin-top: 10px;
      }
    }
  }
}
