- classes = ["js-secrets", "js-#{::KeyManager::Container::Type::CERTIFICATE}", ("hide" unless @selected_type == ::KeyManager::Container::Type::CERTIFICATE)]
%div{class: classes}

  %h3 Secrets
  %p A certificate container is used for storing the following secrets that are relevant to certificates: certificate, private_key (optional), private_key_passphrase (optional), intermediates (optional):

  .row
    .col-sm-6
      = f.simple_fields_for :secrets do |ff|
        = ff.simple_fields_for ::KeyManager::Container::Type::CERTIFICATE.to_sym do |secret|
          = secret.input :certificate, label: "Certificate", as: :select,
          collection: @certificates.map{|secret|["#{secret.display_name} (created: #{date_humanize(secret.created)}, status: #{secret.status})", secret.secret_ref]},
          icon_hint: 'Expected to be a PEM formatted x509 certificate.', prompt: "Choose a certificate", disabled: @selected_type != ::KeyManager::Container::Type::CERTIFICATE,
          selected: @selected_secrets.fetch('certificate', []),  input_html: {data: {target: "certificate-input"}}

          = secret.input :private_key, label: "Private key", as: :select, required: false,
          collection: @private_keys.map{|secret|["#{secret.display_name} (created: #{date_humanize(secret.created)}, status: #{secret.status})", secret.secret_ref]},
          disabled: @selected_type != ::KeyManager::Container::Type::CERTIFICATE, selected: @selected_secrets.fetch('private_key', []),
          :include_blank => "Choose a private key"

          = secret.input :private_key_passphrase, label: "Private key passphrase", as: :select, required: false,
          collection: @passphrases.map{|secret|["#{secret.display_name} (created: #{date_humanize(secret.created)}, status: #{secret.status})", secret.secret_ref]},
          disabled: @selected_type != ::KeyManager::Container::Type::CERTIFICATE, selected: @selected_secrets.fetch('private_key_passphrase', []),
          :include_blank => "Choose a private key passphrase"

          = secret.input :intermediates, label: "Intermediates", as: :select, required: false,
          collection: @certificates.map{|secret|["#{secret.display_name} (created: #{date_humanize(secret.created)}, status: #{secret.status})", secret.secret_ref]},
          icon_hint: 'Expected to be a PEM formatted PKCS7 certificate chain.', disabled: @selected_type != ::KeyManager::Container::Type::CERTIFICATE,
          selected: @selected_secrets.fetch('intermediates', []), :include_blank => 'Choose a intermediates'