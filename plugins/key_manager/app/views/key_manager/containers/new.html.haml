= content_for :title do
  New Container


= simple_form_for @container, url: plugin('key_manager').containers_path(), method: :post, remote: request.xhr?,  html: {id: 'form_container', data: {modal: true}}, wrapper: :vertical_form do |f|

  .modal-body
    - if @container.errors.present?
      .alert.alert-error
        = render_errors(@container.errors)

    .row
      .col-sm-6
        = f.input :name, required: true, label: 'Name', input_html: { autofocus: 'autofocus', target: 'new-container-name'}, placeholder: 'Enter name'
        = f.input :type, label: 'Container Type', required: true, collection: @types.sort.map{|k,v| [k.capitalize,k]}, selected: @selected_type, input_html: {data: {toggle: 'containerTypeSwitcher', target: 'container-type-in-new-container-dialog'}}

    .loading-spinner-section.hide
    .js-container-secrets
      = render partial: 'container_generic', locals: {f:f}
      = render partial: 'container_certificate', locals: {f:f}
      = render partial: 'container_rsa', locals: {f:f}

  %div{class: modal? ? 'modal-footer' : ''}
    - if modal?
      %button.btn.btn-default{type:"button", data: {dismiss:"modal"}, aria: {label: "Cancel"}} Cancel
    - else
      = link_to "Cancel", plugin('key_manager').containers_path(), class: 'btn btn-default'
    = button_tag "Create", { class: 'btn btn-primary pull-right', data: { disable_with: "Please wait...", target: "create-new-container" } }
