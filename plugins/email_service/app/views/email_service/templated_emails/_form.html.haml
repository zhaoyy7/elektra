- pl = plugin('email_service')

- to_addr_hint = "The recipients to place on the To: line of the message. \n You can enter up to 50 recipient email addresses (To, Cc, Bcc) together"

- cc_addr_hint = "The recipients to place on the CC: line of the message. \n You can enter up to 50 recipient email addresses (To, Cc, Bcc) together"

- bcc_addr_hint = "The recipients to place on the BCC: line of the message. \n You can enter up to 50 recipient email addresses (To, Cc, Bcc) together"

- reply_to_addr_hint = "The reply-to email address(es) for the message. If the recipient replies to the message, each reply-to address will receive the reply."

- return_path_hint = "The email address that bounces and complaints will be forwarded to when feedback forwarding is enabled. If the message cannot be delivered to the recipient, then an error message will be returned from the recipient's ISP; this message will then be forwarded to the email address specified by the ReturnPath parameter."

- tags_hint = "key value pair as an array eg., [{\"name\": \"NAME1\", \"value\": \"VALUE1\"}, {\"name\": \"NAME2\", \"value\": \"VALUE2\"}]"

- template_name_hint = "The template to use when sending this email."

- template_data_hint = "A list of replacement values to apply to the template. This parameter is a JSON object, typically consisting of key-value pairs in which the keys correspond to replacement tags in the email template."

- configset_name_hint = "The name of the configuration set to use when you send an email (optional)"

- if !email_addresses_collection || email_addresses_collection.empty?
  %p.alert.alert-warning
    There are no verified eMail addresses defined for your account to send email from. Without a verified eMail address, you can't send eMail.
    You can get verified your eMail address
    = link_to 'here', pl.new_email_verification_path

- if !templates_collection || templates_collection.empty?
  %p.alert.alert-warning
    There is no eMail template defined for your account to send email from. Without an eMail template, you can't send templated eMail.
    You can create eMail template from
    = link_to 'here', pl.new_template_path
    or you can send plain eMail from
    = link_to 'here', pl.new_plain_email_path


= f.input :source_type, required: true, label: "Source Type", input_html: {data: {toggle: 'sourceSwitch'}}, collection: types.sort.map {|k,v| [v,k]}, selected: selected_source_type(templated_email.source_type)

%hr

  = render partial: 'domain_list', locals: {f:f}
  = render partial: 'email_list', locals: {f:f}

= f.input :to_addr, required: true, label: 'To address(es)', placeholder: 'Enter To Addresses', as: :text, input_html: { class: 'auto-text-field u-text-monospace', :rows => 5 }, icon_hint: to_addr_hint

= f.input :cc_addr, required: false, label: 'Cc address(es)', placeholder: 'Enter Cc Addresses', input_html: { class: 'auto-text-field u-text-monospace', :rows => 5 }, icon_hint: cc_addr_hint

= f.input :bcc_addr, required: false, label: 'Bcc address(es)', placeholder: 'Enter Bcc Addresses', input_html: { rows: "10", class: "u-text-monospace" }, icon_hint: bcc_addr_hint

= f.input :reply_to_addr, required: false, label: 'Reply To', placeholder: 'Enter Reply-To Address', input_html: {rows: "5", class: "u-text-monospace"}, as: :text, icon_hint: reply_to_addr_hint

= f.input :tags, required: false, as: :hidden, label: "Tags", icon_hint: tags_hint, input_html: { value: "[ {name: 'name1', value: 'value1', } ]" }

= f.input :return_path, required: false, label: 'Return Path', placeholder: 'Enter Return-Path Address', icon_hint: return_path_hint

= f.input :template_name, required: true, label: 'Template Name', collection: templates_collection, as: :select, input_html: {data: {toggle: 'templateSwitch'}}, icon_hint: template_name_hint

= f.input :template_data, required: true, label: 'Template data - JSON', placeholder: 'Enter valid JSON', input_html: {class: 'auto-text-field u-text-monospace', :rows => 5}, as: :text, icon_hint: template_data_hint

- if configset_names && !configset_names.empty?
  = f.input :configuration_set_name, required: false, label: "Configuration Set", collection: configset_names, as: :select, icon_hint: configset_name_hint
