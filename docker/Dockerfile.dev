FROM keppel.eu-de-1.cloud.sap/ccloud-dockerhub-mirror/library/ruby:2.7-alpine3.15

LABEL source_repository="https://github.wdf.sap.corp/monsoon/workspaces/tree/master/environments/elektra"

ENV GIT_SSL_NO_VERIFY=true
ENV GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" 
ENV TZ="Europe/Berlin"

RUN apk --no-cache add --update \
  git \
  curl \
  nodejs \
  build-base \
  npm \
  --virtual .builddeps \
  postgresql-dev \
  postgresql \
  postgresql-client \
  openssh \
  python2 \
  yarn \
  bash \
  unzip \
  jq \
  the_silver_searcher \
  vim \
  shared-mime-info \
  python3 \
  py3-pip\
  ca-certificates \
  gcc \
  libffi-dev \
  python3-dev \
  musl-dev \
  openssl-dev \
  g++ libxml2-dev \
  libxslt-dev \
  libjpeg-turbo-dev \
  zlib-dev \
  tshark 

RUN pip3 install --upgrade pip
RUN pip3 install mitmproxy
ENV LANG=en_US.UTF-8

RUN pip3 install -U pip

# https://stackoverflow.com/questions/57284921/error-in-setting-up-mitmproxy-on-alpine-3-9
RUN pip3 install mitmproxy

RUN pip3 install pgcli

RUN mkdir /app
WORKDIR /app
VOLUME /app

################### POSTGRESQL
ENV PGDATA /app/tmp/postgresql/data

# fixed bundler version because latest version 2.3.21 produces errors when resolving dependencies 
# or an endless loop when the gem directory needs to be rebuilt
RUN gem install bundler -v 2.3.20 && bundle config set --local path 'vendor/bundle'
RUN echo -e '#!/bin/bash\n\n\
  bundle install \n\
  yarn upgrade juno-ui-components \n\
  yarn \n\
  mkdir -p "$PGDATA" && chown -R postgres:postgres "$PGDATA"\n\
  PGDATA_FILES=$(ls -A $PGDATA)\n\
  if [ -z "$PGDATA_FILES" ]; then\n\
  echo "INFO: setup database"\n\
  su - postgres -c "initdb $PGDATA" && chmod 700 $PGDATA\n\
  fi\n\
  mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql\n\
  su - postgres -c "pg_ctl -D $PGDATA -w start"\n\
  DISABLE_SPRING=1 bin/rails db:create && DISABLE_SPRING=1 bin/rails db:migrate\n\
  /bin/bash -login' >> /usr/local/bin/prepare-elektra && chmod +x /usr/local/bin/prepare-elektra

RUN echo -e '\n\
  #!/bin/bash\n\n\
  GREEN="\033[0;32m" \n\
  YELLOW="\033[0;33m" \n\
  BLUE="\033[0;34m" \n\
  NC="\033[0m" \n\
  echo "" \n\
  echo -e "${GREEN} - start rails:       start-rails"\n\
  echo " - start javascript:  start-js"\n\
  echo " - dev-proxy:         start-dev-proxy"\n\
  echo " - postgres console:  start-pg-console"\n\
  echo " - rebuild database:  rebuild-db"\n\
  echo " - rebuild npms:      rebuild-npms"\n\
  echo " - rebuild gems:      rebuild-gems"\n\
  echo " - show this help:    help-elektra"\n\
  echo ""\n\
  echo -e " [database] elektra database are located in /elektra/tmp/postgresql/data/"\n\
  echo " [proxy]    to use the dev-proxy you need to uncomment proxy vars"\n\
  echo "            and set ELEKTRA_SSL_VERIFY_PEER to false in .env"\n\
  echo -e ${NC}' >> /usr/local/bin/help-elektra && chmod +x /usr/local/bin/help-elektra

RUN echo -e '\n\
  #!/bin/bash\n\n\
  cd /app && bin/rails s -b 0.0.0.0 -p $APP_PORT\n\
  ' >> /usr/local/bin/start-rails && chmod +x /usr/local/bin/start-rails

RUN echo -e '\n\
  #!/bin/bash\n\n\
  cd /app && yarn build --watch\n\
  ' >> /usr/local/bin/start-js && chmod +x /usr/local/bin/start-js

RUN echo -e '\n\
  #!/bin/bash\n\n\
  mitmproxy -p 8888 --ssl-insecure\n\
  ' >> /usr/local/bin/start-dev-proxy && chmod +x /usr/local/bin/start-dev-proxy

RUN echo -e '\n\
  #!/bin/bash\n\n\
  su - postgres -c \"pgcli\"\n\
  ' >> /usr/local/bin/start-pg-console && chmod +x /usr/local/bin/start-pg-console

RUN echo -e '\n\
  #!/bin/bash\n\n\
  cd /app && rm -rf node_modules && yarn\n\
  ' >> /usr/local/bin/rebuild-npms && chmod +x /usr/local/bin/rebuild-npms

RUN echo -e '\n\
  #!/bin/bash\n\n\
  cd /app && rm -rf vendor/bundle && bundle install\n\
  ' >> /usr/local/bin/rebuild-gems && chmod +x /usr/local/bin/rebuild-gems

RUN echo -e '\n\
  #!/bin/bash\n\n\
  rm -rf /app/tmp/postgresql/data/* && echo Done! please exit elektra and start again...\n\
  ' >> /usr/local/bin/rebuild-db && chmod +x /usr/local/bin/rebuild-db

RUN echo -e '\n\
  YELLOW="\033[0;33m" \n\
  NC="\033[0m" \n\
  clear \n\
  echo -e "${YELLOW}Welcome to elektra development 👷 - 🛠️${NC}"\n\
  /usr/local/bin/help-elektra \n\
  ' >> /root/.profile

ENTRYPOINT [ "/usr/local/bin/prepare-elektra" ]  
